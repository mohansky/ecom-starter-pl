/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    products: Product;
    pages: Page;
    categories: Category;
    orders: Order;
    customers: Customer;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    navigation: Navigation;
    homePage: HomePage;
  };
  globalsSelect: {
    navigation: NavigationSelect<false> | NavigationSelect<true>;
    homePage: HomePageSelect<false> | HomePageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  role: 'admin' | 'user';
  firstName?: string | null;
  lastName?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  slug: string;
  /**
   * Short description for product cards and previews
   */
  excerpt?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  price: number;
  compareAtPrice?: number | null;
  costPrice?: number | null;
  sku?: string | null;
  trackQuantity?: boolean | null;
  quantity?: number | null;
  allowBackorder?: boolean | null;
  weight?: number | null;
  dimensions?: {
    length?: number | null;
    width?: number | null;
    height?: number | null;
  };
  images?:
    | {
        image: number | Media;
        alt: string;
        id?: string | null;
      }[]
    | null;
  gallery?:
    | {
        image: number | Media;
        alt: string;
        id?: string | null;
      }[]
    | null;
  categories?: (number | Category)[] | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Add different options for this product (e.g., sizes, colors, storage) that may have different prices
   */
  variants?:
    | {
        /**
         * The type of variant (e.g., Size, Color, Material, Storage)
         */
        name: string;
        /**
         * The specific option (e.g., Small, Red, 128GB, Cotton)
         */
        value: string;
        /**
         * Amount to add/subtract from base price. Use +200 to add ₹200, -50 to subtract ₹50, or 0 for no change.
         */
        priceModifier?: number | null;
        /**
         * Specific quantity for this variant. Leave empty to use product-level quantity.
         */
        quantity?: number | null;
        /**
         * Specific weight for this variant. Leave empty to use product-level weight.
         */
        weight?: number | null;
        /**
         * Specific dimensions for this variant. Leave empty to use product-level dimensions.
         */
        dimensions?: {
          length?: number | null;
          width?: number | null;
          height?: number | null;
        };
        /**
         * Specific SKU for this variant. Leave empty to use product-level SKU.
         */
        sku?: string | null;
        id?: string | null;
      }[]
    | null;
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  status?: ('draft' | 'published' | 'archived') | null;
  featured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  slug: string;
  description?: string | null;
  image?: (number | null) | Media;
  parent?: (number | null) | Category;
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  status?: ('active' | 'inactive') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug: string;
  pageBuilder?:
    | (
        | {
            type: 'fullHeight' | 'halfHeight' | 'autoHeight';
            backgroundImage?: (number | null) | Media;
            overlay?: {
              enable?: boolean | null;
              color?: ('black' | 'white' | 'gray-900' | 'blue-900') | null;
              opacity?: ('10' | '20' | '30' | '40' | '50' | '60' | '70') | null;
            };
            content: {
              alignment?: ('left' | 'center' | 'right') | null;
              eyebrow?: string | null;
              heading: string;
              subheading?: string | null;
              description?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
              buttons?:
                | {
                    type: 'link' | 'page' | 'category';
                    label: string;
                    url?: string | null;
                    page?: (number | null) | Page;
                    category?: (number | null) | Category;
                    style?: ('primary' | 'secondary' | 'outline') | null;
                    openInNewTab?: boolean | null;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            layout: 'imageLeft' | 'imageRight';
            verticalAlignment?: ('top' | 'center' | 'bottom') | null;
            image: number | Media;
            imageSize?: ('oneThird' | 'half' | 'twoThirds') | null;
            content: {
              eyebrow?: string | null;
              heading: string;
              subheading?: string | null;
              richText: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              buttons?:
                | {
                    type: 'link' | 'page' | 'category';
                    label: string;
                    url?: string | null;
                    page?: (number | null) | Page;
                    category?: (number | null) | Category;
                    style?: ('primary' | 'secondary' | 'outline') | null;
                    openInNewTab?: boolean | null;
                    id?: string | null;
                  }[]
                | null;
            };
            settings?: {
              backgroundColor?: ('white' | 'gray-50' | 'gray-900' | 'primary') | null;
              paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
              paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'textWithImage';
          }
        | {
            columns: 'one' | 'two';
            maxWidth?: ('small' | 'medium' | 'large' | 'full') | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            columnOne?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            columnTwo?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            settings?: {
              alignment?: ('left' | 'center' | 'right' | 'justify') | null;
              backgroundColor?: ('none' | 'white' | 'gray-50' | 'gray-900' | 'primary') | null;
              paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
              paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
              enableDropCap?: boolean | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'richText';
          }
        | {
            heading: string;
            description?: string | null;
            displayType: 'manual' | 'featured' | 'latest' | 'category';
            products?: (number | Product)[] | null;
            category?: (number | null) | Category;
            numberOfProducts?: number | null;
            layout?: {
              columns?: ('2' | '3' | '4') | null;
              spacing?: ('compact' | 'normal' | 'spacious') | null;
              showPricing?: boolean | null;
              showComparePrice?: boolean | null;
              showQuickView?: boolean | null;
              showAddToCart?: boolean | null;
            };
            callToAction?: {
              enable?: boolean | null;
              type?: ('link' | 'page' | 'category') | null;
              label?: string | null;
              url?: string | null;
              page?: (number | null) | Page;
              category?: (number | null) | Category;
            };
            settings?: {
              backgroundColor?: ('white' | 'gray-50' | 'gray-900' | 'primary') | null;
              paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
              paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'productShowcase';
          }
      )[]
    | null;
  /**
   * Use Page Builder above for modern layouts. This field is for backward compatibility.
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  excerpt?: string | null;
  featuredImage?: (number | null) | Media;
  layout?: ('default' | 'fullWidth' | 'narrow') | null;
  pageType?: ('page' | 'homepage' | 'about' | 'contact' | 'privacy' | 'terms' | 'faq') | null;
  showInNavigation?: boolean | null;
  navigationOrder?: number | null;
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
    ogImage?: (number | null) | Media;
  };
  status?: ('draft' | 'published' | 'archived') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  orderNumber: string;
  customerRef?: (number | null) | Customer;
  customer: {
    email: string;
    firstName: string;
    lastName: string;
    phone?: string | null;
  };
  items: {
    product: number | Product;
    quantity: number;
    price: number;
    total: number;
    id?: string | null;
  }[];
  shipping: {
    address1: string;
    address2?: string | null;
    city: string;
    state: string;
    postalCode: string;
    country: string;
  };
  billing?: {
    sameAsShipping?: boolean | null;
    address1?: string | null;
    address2?: string | null;
    city?: string | null;
    state?: string | null;
    postalCode?: string | null;
    country?: string | null;
  };
  subtotal: number;
  tax: number;
  shipping_cost: number;
  discount?: number | null;
  total: number;
  paymentMethod: 'razorpay' | 'credit_card' | 'cod';
  payment?: {
    /**
     * Razorpay Order ID
     */
    razorpayOrderId?: string | null;
    /**
     * Razorpay Payment ID
     */
    razorpayPaymentId?: string | null;
    /**
     * Razorpay Payment Signature
     */
    razorpaySignature?: string | null;
    paymentStatus?: ('pending' | 'authorized' | 'captured' | 'refunded' | 'failed') | null;
    /**
     * Payment method used (card, upi, netbanking, etc.)
     */
    paymentMethod?: string | null;
    paymentDate?: string | null;
    /**
     * Payment amount in paise
     */
    amount?: number | null;
  };
  /**
   * Legacy payment ID field - use payment.razorpayPaymentId instead
   */
  paymentId?: string | null;
  status: 'pending' | 'processing' | 'shipped' | 'delivered' | 'cancelled' | 'refunded';
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  email: string;
  firstName: string;
  lastName: string;
  phone?: string | null;
  addresses?:
    | {
        type: 'shipping' | 'billing';
        address1: string;
        address2?: string | null;
        city: string;
        state: string;
        postalCode: string;
        country: string;
        id?: string | null;
      }[]
    | null;
  orders?: (number | Order)[] | null;
  totalOrders?: number | null;
  totalSpent?: number | null;
  lastOrderDate?: string | null;
  status?: ('active' | 'inactive') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  firstName?: T;
  lastName?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  excerpt?: T;
  description?: T;
  price?: T;
  compareAtPrice?: T;
  costPrice?: T;
  sku?: T;
  trackQuantity?: T;
  quantity?: T;
  allowBackorder?: T;
  weight?: T;
  dimensions?:
    | T
    | {
        length?: T;
        width?: T;
        height?: T;
      };
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  gallery?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  categories?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  variants?:
    | T
    | {
        name?: T;
        value?: T;
        priceModifier?: T;
        quantity?: T;
        weight?: T;
        dimensions?:
          | T
          | {
              length?: T;
              width?: T;
              height?: T;
            };
        sku?: T;
        id?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  status?: T;
  featured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  pageBuilder?:
    | T
    | {
        hero?:
          | T
          | {
              type?: T;
              backgroundImage?: T;
              overlay?:
                | T
                | {
                    enable?: T;
                    color?: T;
                    opacity?: T;
                  };
              content?:
                | T
                | {
                    alignment?: T;
                    eyebrow?: T;
                    heading?: T;
                    subheading?: T;
                    description?: T;
                    buttons?:
                      | T
                      | {
                          type?: T;
                          label?: T;
                          url?: T;
                          page?: T;
                          category?: T;
                          style?: T;
                          openInNewTab?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        textWithImage?:
          | T
          | {
              layout?: T;
              verticalAlignment?: T;
              image?: T;
              imageSize?: T;
              content?:
                | T
                | {
                    eyebrow?: T;
                    heading?: T;
                    subheading?: T;
                    richText?: T;
                    buttons?:
                      | T
                      | {
                          type?: T;
                          label?: T;
                          url?: T;
                          page?: T;
                          category?: T;
                          style?: T;
                          openInNewTab?: T;
                          id?: T;
                        };
                  };
              settings?:
                | T
                | {
                    backgroundColor?: T;
                    paddingTop?: T;
                    paddingBottom?: T;
                  };
              id?: T;
              blockName?: T;
            };
        richText?:
          | T
          | {
              columns?: T;
              maxWidth?: T;
              content?: T;
              columnOne?: T;
              columnTwo?: T;
              settings?:
                | T
                | {
                    alignment?: T;
                    backgroundColor?: T;
                    paddingTop?: T;
                    paddingBottom?: T;
                    enableDropCap?: T;
                  };
              id?: T;
              blockName?: T;
            };
        productShowcase?:
          | T
          | {
              heading?: T;
              description?: T;
              displayType?: T;
              products?: T;
              category?: T;
              numberOfProducts?: T;
              layout?:
                | T
                | {
                    columns?: T;
                    spacing?: T;
                    showPricing?: T;
                    showComparePrice?: T;
                    showQuickView?: T;
                    showAddToCart?: T;
                  };
              callToAction?:
                | T
                | {
                    enable?: T;
                    type?: T;
                    label?: T;
                    url?: T;
                    page?: T;
                    category?: T;
                  };
              settings?:
                | T
                | {
                    backgroundColor?: T;
                    paddingTop?: T;
                    paddingBottom?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  content?: T;
  excerpt?: T;
  featuredImage?: T;
  layout?: T;
  pageType?: T;
  showInNavigation?: T;
  navigationOrder?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  image?: T;
  parent?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customerRef?: T;
  customer?:
    | T
    | {
        email?: T;
        firstName?: T;
        lastName?: T;
        phone?: T;
      };
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        price?: T;
        total?: T;
        id?: T;
      };
  shipping?:
    | T
    | {
        address1?: T;
        address2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
      };
  billing?:
    | T
    | {
        sameAsShipping?: T;
        address1?: T;
        address2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
      };
  subtotal?: T;
  tax?: T;
  shipping_cost?: T;
  discount?: T;
  total?: T;
  paymentMethod?: T;
  payment?:
    | T
    | {
        razorpayOrderId?: T;
        razorpayPaymentId?: T;
        razorpaySignature?: T;
        paymentStatus?: T;
        paymentMethod?: T;
        paymentDate?: T;
        amount?: T;
      };
  paymentId?: T;
  status?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  email?: T;
  firstName?: T;
  lastName?: T;
  phone?: T;
  addresses?:
    | T
    | {
        type?: T;
        address1?: T;
        address2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
        id?: T;
      };
  orders?: T;
  totalOrders?: T;
  totalSpent?: T;
  lastOrderDate?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface Navigation {
  id: number;
  mainNav?:
    | {
        type: 'link' | 'page' | 'category' | 'dropdown';
        label: string;
        url?: string | null;
        page?: (number | null) | Page;
        category?: (number | null) | Category;
        dropdown?:
          | {
              type: 'link' | 'page' | 'category';
              label: string;
              url?: string | null;
              page?: (number | null) | Page;
              category?: (number | null) | Category;
              openInNewTab?: boolean | null;
              id?: string | null;
            }[]
          | null;
        openInNewTab?: boolean | null;
        id?: string | null;
      }[]
    | null;
  footerNav?:
    | {
        title: string;
        links?:
          | {
              type: 'link' | 'page' | 'category';
              label: string;
              url?: string | null;
              page?: (number | null) | Page;
              category?: (number | null) | Category;
              openInNewTab?: boolean | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  socialLinks?:
    | {
        platform: 'facebook' | 'instagram' | 'twitter' | 'linkedin' | 'youtube' | 'tiktok' | 'whatsapp' | 'other';
        url: string;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePage".
 */
export interface HomePage {
  id: number;
  hero: {
    title: string;
    subtitle?: string | null;
    backgroundImage?: (number | null) | Media;
    ctaButton?: {
      text?: string | null;
      type?: ('link' | 'page' | 'category') | null;
      url?: string | null;
      page?: (number | null) | Page;
      category?: (number | null) | Category;
    };
  };
  textWithImage?: {
    enabled?: boolean | null;
    title?: string | null;
    content?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    image?: (number | null) | Media;
    imagePosition?: ('left' | 'right') | null;
    button?: {
      text?: string | null;
      type?: ('link' | 'page') | null;
      url?: string | null;
      page?: (number | null) | Page;
    };
  };
  featuredProducts?: {
    enabled?: boolean | null;
    title?: string | null;
    subtitle?: string | null;
    products?: (number | Product)[] | null;
    viewAllButton?: {
      text?: string | null;
      url?: string | null;
    };
  };
  featuredCategories?: {
    enabled?: boolean | null;
    title?: string | null;
    subtitle?: string | null;
    categories?: (number | Category)[] | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation_select".
 */
export interface NavigationSelect<T extends boolean = true> {
  mainNav?:
    | T
    | {
        type?: T;
        label?: T;
        url?: T;
        page?: T;
        category?: T;
        dropdown?:
          | T
          | {
              type?: T;
              label?: T;
              url?: T;
              page?: T;
              category?: T;
              openInNewTab?: T;
              id?: T;
            };
        openInNewTab?: T;
        id?: T;
      };
  footerNav?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              type?: T;
              label?: T;
              url?: T;
              page?: T;
              category?: T;
              openInNewTab?: T;
              id?: T;
            };
        id?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePage_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        backgroundImage?: T;
        ctaButton?:
          | T
          | {
              text?: T;
              type?: T;
              url?: T;
              page?: T;
              category?: T;
            };
      };
  textWithImage?:
    | T
    | {
        enabled?: T;
        title?: T;
        content?: T;
        image?: T;
        imagePosition?: T;
        button?:
          | T
          | {
              text?: T;
              type?: T;
              url?: T;
              page?: T;
            };
      };
  featuredProducts?:
    | T
    | {
        enabled?: T;
        title?: T;
        subtitle?: T;
        products?: T;
        viewAllButton?:
          | T
          | {
              text?: T;
              url?: T;
            };
      };
  featuredCategories?:
    | T
    | {
        enabled?: T;
        title?: T;
        subtitle?: T;
        categories?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}